<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue3中使用cookie</title>
      <link href="/2023/10/17/vue3%E4%B8%AD%E4%BD%BF%E7%94%A8cookie/"/>
      <url>/2023/10/17/vue3%E4%B8%AD%E4%BD%BF%E7%94%A8cookie/</url>
      
        <content type="html"><![CDATA[<h1 id="安装js-cookie库"><a href="#安装js-cookie库" class="headerlink" title="安装js-cookie库"></a>安装<strong>js-cookie</strong>库</h1><p><code>npm install js-cookie</code></p><h1 id="设置cookie值"><a href="#设置cookie值" class="headerlink" title="设置cookie值"></a>设置cookie值</h1><p>在需要获取cookie的页面使用<code>Cookies.set</code>方法将其储存为cookie</p><p>以登录页面为例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 登录表单 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit</span>=<span class="string">&quot;login&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;username&quot;</span>&gt;</span>Username:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">required</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">Cookies</span> <span class="keyword">from</span> <span class="string">&#x27;js-cookie&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">login</span>(<span class="params">event</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      event.<span class="title function_">preventDefault</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 处理登录逻辑，获取用户名数据</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> username = <span class="variable language_">this</span>.<span class="property">username</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 存储为cookie</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;username&#x27;</span>, username);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 跳转到主页面</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="string">&#x27;/main&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="获取cookie值"><a href="#获取cookie值" class="headerlink" title="获取cookie值"></a>获取cookie值</h1><p>在另外一个需要cookie值的页面使用<code>cookies.get</code>方法获取存储在cookie中的数据</p><p>以主页面为例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Welcome, &#123;&#123; username &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">Cookies</span> <span class="keyword">from</span> <span class="string">&#x27;js-cookie&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 获取cookie中的用户名数据</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">this</span>.<span class="property">username</span> = <span class="title class_">Cookies</span>.<span class="title function_">get</span>(<span class="string">&#x27;username&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>django基础</title>
      <link href="/2023/10/17/001%E5%AE%89%E8%A3%85/"/>
      <url>/2023/10/17/001%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>以管理员身份运行cmd</p><p><code>pip3 install django  </code></p><p>创建一个项目</p><p><code>django-admin startproject mysite</code></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysite/</span><br><span class="line">    manage.py</span><br><span class="line">    mysite/</span><br><span class="line">        __init__.py</span><br><span class="line">        settings.py</span><br><span class="line">        urls.py</span><br><span class="line">        asgi.py</span><br><span class="line">        wsgi.py</span><br></pre></td></tr></table></figure><ul><li>manage.py:【固定】用于启动项目</li><li>mysite&#x2F;<ul><li>asgi.py【固定】接受网络请求</li><li>wsgi.py【固定】接受网络请求</li><li>urls.py【固定】URL和函数的对应关系</li><li>settings【固定】项目配置文件</li></ul></li></ul><h1 id="创建app"><a href="#创建app" class="headerlink" title="创建app"></a>创建app</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3<span class="number">.9</span> manage.py startapp app01</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">│  admin.py【固定】django默认提供的后台管理</span><br><span class="line">│  apps.py【固定】app启动类</span><br><span class="line">│  models.py 【重要】对数据库进行操作</span><br><span class="line">│  tests.py【固定】单元测试</span><br><span class="line">│  views.py【重要】函数</span><br><span class="line">│  __init__.py</span><br><span class="line">│</span><br><span class="line">└─migrations【固定】数据库变更记录</span><br><span class="line">        __init__.py</span><br></pre></td></tr></table></figure><ul><li>注册app:在mysite&#x2F;settings.py中注册app</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">&#x27;django.contrib.admin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.contenttypes&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.staticfiles&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;app.apps.AppConfig&#x27;</span>//注册app语句</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>配置url,编写视图函数</li></ul><p><img src="/assets/image-20231014155514531.png" alt="image-20231014155514531"></p><p><img src="/assets/image-20231014171052726.png" alt="image-20231014171052726"></p><ul><li><p>启动程序</p><ul><li><code>python manage.py runserver </code></li></ul></li><li><p>启动成功</p></li></ul><p><img src="/assets/image-20231014171127100.png" alt="image-20231014171127100"></p><p><img src="/assets/image-20231014171111727.png" alt="image-20231014171111727"></p><p>如果想再加页面，只要再添加一个url，再填写一个视图函数即可</p><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><p>目前我们只能返回一个文本，如果我们想返回一个html文件</p><p>views.py内使用render返回页面名称<img src="/assets/image-20231015083910480.png" alt="image-20231015083910480"></p><p>app下创建templates\页面</p><p><img src="/assets/image-20231015084004595.png" alt="image-20231015084004595"></p><p>url.py配置路由</p><p><img src="/assets/image-20231015084046950.png" alt="image-20231015084046950"></p><h1 id="静态文件的加载"><a href="#静态文件的加载" class="headerlink" title="静态文件的加载"></a>静态文件的加载</h1><p>在app目录下创建static文件夹，用于存放静态文件<img src="/assets/image-20231015084404893.png" alt="image-20231015084404893"></p><p>如果后续会对statics文件夹名称进行修改，则需配置动态路由。(若修改文件夹名称为static)</p><p>配置方法：</p><ul><li>settings.py内添加：<code>STATIC_URL = &#39;/static/&#39;</code></li><li>html模板添加：<code>&#123;% load static %&#125;</code></li><li>引用文件时的写法：eg:<code>&lt;img src=&quot;&#123;% static 'img/i.jpg' %&#125;&quot; alt=&quot;&quot;&gt;</code></li></ul><p>后端对接口的调用：</p><p><img src="/assets/image-20231015094005079.png" alt="image-20231015094005079"></p><p><img src="/assets/image-20231015094026263.png" alt="image-20231015094026263"></p><p>view.py url.py templates 浏览器映射关系</p><p><img src="/assets/image-20231015104829250.png" alt="image-20231015104829250"></p><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h6 id="虚拟环境中安装mysqlclient"><a href="#虚拟环境中安装mysqlclient" class="headerlink" title="虚拟环境中安装mysqlclient"></a>虚拟环境中安装mysqlclient</h6><p><code>pip install mysqlclient</code></p><h6 id="ORM可以帮助我们"><a href="#ORM可以帮助我们" class="headerlink" title="ORM可以帮助我们"></a>ORM可以帮助我们</h6><ul><li>创建、修改、删除数据库中的表【无法创建数据库】</li><li>操作表中的数据</li></ul><h6 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h6><ul><li>启动MySQL，<code>mysql -u root -p</code></li><li><code>show databases;</code></li><li><code>create database &lt;数据库名&gt; DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</code></li><li><code>use &lt;数据库名&gt;</code><ul><li><code>show tables</code>发现是空的</li></ul></li></ul><h6 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h6><p>settings配置数据库：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;djangolearn&#x27;</span>,<span class="comment">#数据库名</span></span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>:<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>:<span class="string">&#x27;12345&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>:<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="comment">#MySQL位置，这里为本机</span></span><br><span class="line">        <span class="string">&#x27;PORT&#x27;</span>:<span class="string">&#x27;3306&#x27;</span>,<span class="comment">#服务器端口号</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="django操作表"><a href="#django操作表" class="headerlink" title="django操作表"></a>django操作表</h6><ul><li>创建表</li><li>删除表</li><li>修改表</li></ul><p>移步models.py</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserInfo</span>(models.Model):<span class="comment">#要求：继承models.Model类</span></span><br><span class="line">    name = models.ChsrField(maxlength = <span class="number">32</span>)</span><br><span class="line">    password = models.CharFied</span><br><span class="line">    age = models.IntegerField()</span><br></pre></td></tr></table></figure><p>SQL语句：(未经ORM转换之前)</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table app_userInfo(</span><br><span class="line">    <span class="built_in">id</span> bigint auto_increment primary kry</span><br><span class="line">    name varchar(<span class="number">32</span>)</span><br><span class="line">    password varchar(<span class="number">64</span>)</span><br><span class="line">    age <span class="built_in">int</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><code>python manage.py makemigrations</code></p><p><code>python manage.py migrate</code></p><p><img src="/assets/image-20231015173301684.png" alt="image-20231015173301684"></p><p>此处把userInfo打错了</p><p>查看第一个表</p><p><code>desc app_usertnfo</code></p><p><img src="/assets/image-20231015173500916.png" alt="image-20231015173500916"></p><p>其他的表的来源：源于django提供的其他默认的app，生成了其他的默认功能的表</p><p><img src="/assets/image-20231015173623181.png" alt="image-20231015173623181"></p><ul><li><p>添加表，只要在models里面添加类，再执行两条语句即可</p></li><li><p>删除表，删除类</p></li><li><p>添加已经存在的表的列：(表里可能有数据)</p><ul><li><p>选择一：终端给这一列添加值</p></li><li><p>选择二：在类给新列添加默认值：eg:<code>age = models.IntegerField(default=2)</code></p></li><li><p>选择三：允许新列为空：eg:<code>age = models.IntegerField(null=True,blank=True)</code></p></li></ul></li></ul><h6 id="操作表中的数据"><a href="#操作表中的数据" class="headerlink" title="操作表中的数据"></a>操作表中的数据</h6><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UserTnfo.objects.create(name=<span class="string">&quot;feather&quot;</span>,password = <span class="string">&quot;12345&quot;</span>,age=<span class="number">19</span>)</span><br></pre></td></tr></table></figure><h6 id="mysql启动失败"><a href="#mysql启动失败" class="headerlink" title="mysql启动失败"></a>mysql启动失败</h6><p>Can’t connect to MySQL server on ‘localhost:3306’ (10061)</p><p>密码：12345</p><p>以管理员身份运行CMD</p><p>任务管理器内启动mySQL服务</p><h1 id="Django前后端分离"><a href="#Django前后端分离" class="headerlink" title="Django前后端分离"></a>Django前后端分离</h1><ol><li><p><strong>安装和配置 Django REST framework</strong>：</p><p>安装了 Django REST framework。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install djangorestframework</span><br></pre></td></tr></table></figure><p>在 <code>settings.py</code> 文件中添加 <code>&#39;rest_framework&#39;</code> 到 <code>INSTALLED_APPS</code> 配置项中，以启用 DRF。</p></li><li><p><strong>创建模型</strong>：</p><p>创建一个模型来表示你的表。这个模型将定义表的结构和字段。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">YourModel</span>(models.Model):</span><br><span class="line">    field1 = models.CharField(max_length=<span class="number">100</span>)</span><br><span class="line">    field2 = models.IntegerField()</span><br><span class="line">    <span class="comment"># 添加其他字段...</span></span><br></pre></td></tr></table></figure></li><li><p><strong>创建序列化器</strong>：</p><p>创建一个序列化器，将模型数据转换为 JSON 或其他适当的格式。创建 <code>serializers.py</code>，定义一个序列化器类：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> serializers</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> YourModel</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">YourModelSerializer</span>(serializers.ModelSerializer):</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        model = YourModel</span><br><span class="line">        fields = <span class="string">&#x27;__all__&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>创建 API 视图</strong>：</p><p>在 <code>views.py</code> 文件中创建一个 API 视图来处理对表数据的请求。可使用 DRF 的通用视图类来简化这个过程：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pythonfrom rest_framework <span class="keyword">import</span> generics</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> YourModel</span><br><span class="line"><span class="keyword">from</span> .serializers <span class="keyword">import</span> YourModelSerializer</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">YourModelList</span>(generics.ListAPIView):</span><br><span class="line">    queryset = YourModel.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = YourModelSerializer</span><br></pre></td></tr></table></figure></li><li><p><strong>设置 URL 路由</strong>：</p><p><code>urls.py</code> 中，设置 URL 路由以映射请求到相应的 API 视图：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pythonfrom django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;api/your-model/&#x27;</span>, views.YourModelList.as_view(), name=<span class="string">&#x27;your-model-list&#x27;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>这将允许前端应用访问 API 数据的 URL。</p></li><li><p><strong>运行开发服务器</strong>：</p><p>运行 Django </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure></li><li><p><strong>前端项目调用 API</strong>：</p><p>前端项目可以使用 JavaScript Fetch API、Axios 或其他 HTTP 客户端库来调用 API。在前端项目中使用 API URL 来获取表的内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> apiUrl = <span class="string">&#x27;http://localhost:8000/api/your-model/&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fetch</span>(apiUrl)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 处理从 API 获取到的数据</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;API 请求错误:&#x27;</span>, error);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></li></ol><p>这些步骤将帮助你创建一个 API，使前端能够获取到表的内容，并以 JSON 或其他格式返回数据。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇文章</title>
      <link href="/2023/09/16/2023-9-16-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2023/09/16/2023-9-16-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="第一篇文章"><a href="#第一篇文章" class="headerlink" title="第一篇文章"></a>第一篇文章</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
